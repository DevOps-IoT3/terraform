name: Destroy Terraform

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Nom de l'environnement (ex: staging, prod)"
        required: true
        default: "prod"

jobs:
  destroy:
    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      TF_VAR_github_username: ${{ secrets.TF_VAR_GITHUB_USERNAME }}
      TF_VAR_github_token: ${{ secrets.TF_VAR_GITHUB_TOKEN }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Azure CLI Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init (backend distant)
        run: |
          terraform init \
            -backend-config="storage_account_name=stterraformstatebackend" \
            -backend-config="container_name=tfstate" \
            -backend-config="key=devops-cicd.${{ github.event.inputs.environment }}.tfstate" \
            -backend-config="resource_group_name=rg-terraform-state"

      - name: Terraform Refresh (optionnel mais utile pour mise Ã  jour du state)
        run: terraform refresh -var="environment=${{ github.event.inputs.environment }}"

      - name: Terraform Destroy
        run: terraform destroy -auto-approve -var="environment=${{ github.event.inputs.environment }}"
